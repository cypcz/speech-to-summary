import type { NextPage } from "next";
import Head from "next/head";
import { useCallback, useState } from "react";
import { useDropzone } from "react-dropzone";
import { useQuery } from "react-query";
import { getData, GET_DATA } from "../api/requests";

const Home: NextPage = () => {
  const { data } = useQuery(GET_DATA, getData);
  const [loadingProgress, setLoadingProgress] = useState<number | null>(null);

  const onDrop = useCallback(async (acceptedFiles: File[]) => {
    const file = acceptedFiles[0];

    const formData = new FormData();
    formData.append("file", file);

    const xhttp = new XMLHttpRequest();

    xhttp.upload.addEventListener("progress", (ev) => {
      setLoadingProgress(ev.loaded / ev.total);
    });

    xhttp.open("POST", `${process.env.NEXT_PUBLIC_API_URL}/initiate-summary`);
    xhttp.send(formData);
  }, []);

  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div {...getRootProps()}>
          <input {...getInputProps()} />
          {isDragActive ? (
            <p>Drop the files here ...</p>
          ) : (
            <p>Drag drop some files here, or click to select files</p>
          )}
        </div>

        {loadingProgress && (
          <div>Progress: {(loadingProgress * 100).toFixed(0)}%</div>
        )}
      </main>

      <footer>footer</footer>
    </>
  );
};

export default Home;
